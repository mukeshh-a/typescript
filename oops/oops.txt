OOPS (Object-Oriented Programming System)
=========================================

What is OOPS?
--------------
Object-Oriented Programming System (OOPS) is a programming paradigm based on the concept of "objects", which can contain data (fields or attributes) and code (methods or functions). 
It allows for modular, reusable, and organized code by modeling real-world entities as software objects.

Features / Principles of OOPS:
------------------------------
1. Class
2. Object
3. Inheritance
4. Polymorphism
5. Abstraction
6. Encapsulation

------------------------------------
Object:
------------------------------------
- An object is an instance of a class.
- It is an entity that has:
    - State (data/values)
    - Behavior (methods/functions)
- Objects consume memory when created.

Example:
A car (object) has:
    State: color, brand, speed
    Behavior: accelerate(), brake(), honk()

------------------------------------
Class:
------------------------------------
- A class is a blueprint or template used to create objects.
- It is a logical entity that groups:
    - Variables
    - Methods
    - Constructors
    - Statements
- A class does not consume memory. Memory is allocated only when objects are created.

------------------------------------
Inheritance:
------------------------------------
- Inheritance is a mechanism in which one class acquires the properties and behaviors of another class using the 'extends' keyword.
- It promotes code reusability and hierarchical structure.

Types of classes in inheritance:
    - Superclass / Parent class: The class whose features are inherited.
    - Subclass / Child class: The class that inherits the features of the parent class.

----------------------------------------------
Polymorphism
------------------------------------------------
- Multiple forms of object.
- one object is going to show different properties in every stage 

Abstraction
- process of hiding the internal implementation (details, codes, information) and showing only functionality to the end user
- hiding internal functionality and showing external functionality to the user.
- sending message on whatsapp
- can be done by:
    - abstract class
    - interface

1. Abstarct class (0 to 100%) - 

	- A class which is declared with an abstract keyword is known as an abstract class.	

		abstract class Classname {

			}
							
	- Abstract class has abstract and non-abstract methods (i.e. incomplete and complete methods). 
		- variables 
		- constructor 

	- It cannot be instantiated (Object creation).

	
    - Concrete Class - The class which is responsible to implement all the abstract methods from the abstract class.